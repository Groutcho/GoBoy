// this file is automatically generated by instruction_generator.py
package cpu

import . "memory"

// sbc  A, B - A=A-B-cy
func x98_sbc() int {
	left := GetA()
	right := GetB()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 1
}

// sbc  A, C - A=A-C-cy
func x99_sbc() int {
	left := GetA()
	right := GetC()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 1
}

// sbc  A, D - A=A-D-cy
func x9A_sbc() int {
	left := GetA()
	right := GetD()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 1
}

// sbc  A, E - A=A-E-cy
func x9B_sbc() int {
	left := GetA()
	right := GetE()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 1
}

// sbc  A, H - A=A-H-cy
func x9C_sbc() int {
	left := GetA()
	right := GetH()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 1
}

// sbc  A, L - A=A-L-cy
func x9D_sbc() int {
	left := GetA()
	right := GetL()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 1
}

// sbc  A, (HL) - A=A-(HL)-cy
func x9E_sbc() int {
	left := GetA()
	right := Get(GetHL())
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 2
}

// sbc  A, A - A=A-A-cy
func x9F_sbc() int {
	left := GetA()
	right := GetA()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 1
}

// sbc  A, %1 - A=A-%1-cy
func xDE_sbc() int {
	left := GetA()
	right := FetchOperand8()
	result := int(left) - int(right) - GetFlagCyInt()

	SetA(uint8(result))
	hcarry := IsSubHalfCarry(left, right)
	SetFlags(result, F_SET_IF, F_SET_1, hcarry, F_SET_IF, F_8bit)

	return 2
}

