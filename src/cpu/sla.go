// this file is automatically generated by instruction_generator.py
package cpu

import . "memory"

// sla  B - shift B left arithmetic (b0=0)
func xCB_20_sla() int {
	value := GetB()

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	SetB(value)

	return 2
}

// sla  C - shift C left arithmetic (b0=0)
func xCB_21_sla() int {
	value := GetC()

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	SetC(value)

	return 2
}

// sla  D - shift D left arithmetic (b0=0)
func xCB_22_sla() int {
	value := GetD()

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	SetD(value)

	return 2
}

// sla  E - shift E left arithmetic (b0=0)
func xCB_23_sla() int {
	value := GetE()

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	SetE(value)

	return 2
}

// sla  H - shift H left arithmetic (b0=0)
func xCB_24_sla() int {
	value := GetH()

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	SetH(value)

	return 2
}

// sla  L - shift L left arithmetic (b0=0)
func xCB_25_sla() int {
	value := GetL()

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	SetL(value)

	return 2
}

// sla  (HL) - shift left arithmetic (b0=0)
func xCB_26_sla() int {
	value := Get(GetHL())

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	Write(GetHL(), value)

	return 4
}

// sla  A - shift A left arithmetic (b0=0)
func xCB_27_sla() int {
	value := GetA()

	SetFlagCy(value & 0x80 == 0x80)

	value = value << 1

	SetFlagZf(value == 0)
	SetFlagN(false)
	SetFlagH(false)

	SetA(value)

	return 2
}

